// Generated by Haxe 3.4.0
(function () { "use strict";
var Main = function() { };
Main.__name__ = true;
Main.main = function() {
	var MyGame = require("../fbschemas/myschema_generated.js").MyGame;
	console.log(require("../fbschemas/myschema_generated.js").MyGame);
	console.log(flatbuffers_FlatBuffers);
	var builder = new flatbuffers_Builder(1024);
	var weaponOne = builder.createString("Sword");
	var weaponTwo = builder.createString("Axe");
	MyGame.Sample.Weapon.startWeapon(builder);
	MyGame.Sample.Weapon.addName(builder,weaponOne);
	MyGame.Sample.Weapon.addDamage(builder,3);
	var sword = MyGame.Sample.Weapon.endWeapon(builder);
	MyGame.Sample.Weapon.startWeapon(builder);
	MyGame.Sample.Weapon.addName(builder,weaponTwo);
	MyGame.Sample.Weapon.addDamage(builder,5);
	var axe = MyGame.Sample.Weapon.endWeapon(builder);
	var name = builder.createString("Orc");
	var treasure = [0,1,2,3,4,5,6,7,8,9];
	var inv = MyGame.Sample.Monster.createInventoryVector(builder,treasure);
	var weaps = [sword,axe];
	var weapons = MyGame.Sample.Monster.createWeaponsVector(builder,weaps);
	MyGame.Sample.Monster.startMonster(builder);
	var MyGame1 = MyGame.Sample.Monster;
	var tmp = MyGame.Sample.Vec3.createVec3(builder,1.0,2.0,3.0);
	MyGame1.addPos(builder,tmp);
	MyGame.Sample.Monster.addHp(builder,300);
	MyGame.Sample.Monster.addColor(builder,MyGame.Sample.Color.Red);
	MyGame.Sample.Monster.addName(builder,name);
	MyGame.Sample.Monster.addInventory(builder,inv);
	MyGame.Sample.Monster.addWeapons(builder,weapons);
	MyGame.Sample.Monster.addEquippedType(builder,MyGame.Sample.Equipment.Weapon);
	MyGame.Sample.Monster.addEquipped(builder,axe);
	var orc = MyGame.Sample.Monster.endMonster(builder);
	MyGame.Sample.Monster.addEquippedType(builder,MyGame.Sample.Equipment.Weapon);
	MyGame.Sample.Monster.addEquipped(builder,axe);
	builder.finish(orc);
	var bytes = builder.asUint8Array();
	var buf = new flatbuffers_ByteBuffer(bytes);
	console.log(buf);
	var monster = MyGame.Sample.Monster.getRootAsMonster(buf);
	var pos = monster.pos();
	var x = pos.x();
	var y = pos.y();
	var z = pos.z();
	var invLength = monster.inventoryLength();
	var thirdItem = monster.inventory(2);
	var weaponsLength = monster.weaponsLength();
	var secondWeaponName = monster.weapons(1).name();
	var secondWeaponDamage = monster.weapons(1).damage();
	console.log(pos);
	console.log(x);
	console.log(y);
	console.log(z);
	console.log(invLength);
	console.log(thirdItem);
	console.log(weaponsLength);
	console.log(secondWeaponName);
	console.log(secondWeaponDamage);
};
Math.__name__ = true;
var flatbuffers_Table = function() { };
flatbuffers_Table.__name__ = true;
var flatbuffers_Encoding = { __ename__ : true, __constructs__ : ["UTF8_BYTES","UTF16_STRING"] };
flatbuffers_Encoding.UTF8_BYTES = ["UTF8_BYTES",0];
flatbuffers_Encoding.UTF8_BYTES.__enum__ = flatbuffers_Encoding;
flatbuffers_Encoding.UTF16_STRING = ["UTF16_STRING",1];
flatbuffers_Encoding.UTF16_STRING.__enum__ = flatbuffers_Encoding;
var flatbuffers_FlatBuffers = require("flatbuffers").flatbuffers;
var flatbuffers_Builder = require("flatbuffers").flatbuffers.Builder;
var flatbuffers_ByteBuffer = require("flatbuffers").flatbuffers.ByteBuffer;
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0 ? "," : "") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
var util_Webpack = function() { };
util_Webpack.__name__ = true;
String.__name__ = true;
Array.__name__ = true;
Main.main();
})();

//# sourceMappingURL=main.js.map